{"version":3,"sources":["components/Header.js","components/Todos.js","components/TodosContainer.js","components/NewTodo.js","App.js","firebaseConfig.js","serviceWorker.js","index.js"],"names":["Header","className","Todos","checkDone","props","todo","done","textDecoration","color","dueDate","due","today","formatRelative","includes","replace","this","Date","style","title","description","parseISO","priority","created","onClick","toggleComplete","bind","id","deleteTodo","Component","TodosContainer","library","map","key","NewTodo","submitHandler","addTodo","nextId","document","querySelector","value","toggleModal","modalOpen","display","name","type","placeholder","htmlFor","defaultValue","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireLibrary","firestore","collection","doc","App","updateStorage","get","then","data","todosLibrary","state","console","log","set","length","setState","newLib","push","filter","exists","lib","item","toDate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cce63ca4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n\treturn <header className=\"title\">Todo List</header>;\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatRelative, parseISO } from \"date-fns\";\n\nexport default class Todos extends Component {\n\tcheckDone = () => {\n\t\tif (this.props.todo.done) {\n\t\t\treturn {\n\t\t\t\ttextDecoration: \"line-through\",\n\t\t\t\tcolor: \"grey\",\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttextDecoration: \"inherit\",\n\t\t\t\tcolor: \"inherit\",\n\t\t\t};\n\t\t}\n\t};\n\n\tdueDate = (due, today) => {\n\t\tif (formatRelative(due, today).includes(' at 12:00 AM')) {\n\t\t\treturn formatRelative(due, today).replace(' at 12:00 AM', '')\n\t\t} else return formatRelative(due, today)\n\t}\n\n\trender() {\n\t\tconst todo = this.props.todo;\n\t\tconst today = new Date();\n\n\t\treturn (\n\t\t\t<div className=\"todo-container\">\n\t\t\t\t<h1 className=\"todo-title\" style={this.checkDone()}>\n\t\t\t\t\t{todo.title}\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"todo-desc\" style={this.checkDone()}>\n\t\t\t\t\t{todo.description}\n\t\t\t\t</p>\n\t\t\t\t<h3 className=\"todo-due\" style={this.checkDone()}>\n\t\t\t\t\tDue: {this.dueDate(parseISO(todo.due), today)}\n\t\t\t\t</h3>\n\t\t\t\t<p className=\"todo-priority\" style={this.checkDone()}>\n\t\t\t\t\tPriority: {todo.priority}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"todo-created\">\n\t\t\t\t\tCreated: {formatRelative(todo.created, today)}\n\t\t\t\t</p>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"done-button\"\n\t\t\t\t\tonClick={this.props.toggleComplete.bind(this, todo.id)}\n\t\t\t\t>\n\t\t\t\t\tDone\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"delete-button\"\n\t\t\t\t\tonClick={this.props.deleteTodo.bind(this, todo.id)}\n\t\t\t\t>\n\t\t\t\t\tDelete\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTodos.propTypes = {\n\ttodo: PropTypes.object.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Todos from \"./Todos\";\n\nexport default class TodosContainer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{this.props.library.map((todo) => (\n\t\t\t\t\t<Todos\n\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\ttoggleComplete={this.props.toggleComplete}\n\t\t\t\t\t\tdeleteTodo={this.props.deleteTodo}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport default class NewTodo extends Component {\n\tsubmitHandler = () => {\n\t\tconst today = new Date();\n\t\tthis.props.addTodo({\n\t\t\tid: this.props.nextId(),\n\t\t\ttitle: document.querySelector(\".modal-title-input\").value,\n\t\t\tdescription: document.querySelector(\".modal-desc-input\").value,\n\t\t\tdue: document.querySelector(\".modal-due-date-input\").value,\n\t\t\tpriority: document.querySelector(\".modal-priority-input\").value,\n\t\t\tcreated: today,\n\t\t\tdone: false,\n\t\t});\n\n\t\tthis.props.toggleModal();\n\n\t\tdocument.querySelector(\".modal-title-input\").value = \"\";\n\t\tdocument.querySelector(\".modal-desc-input\").value = \"\";\n\t\tdocument.querySelector(\".modal-due-date-input\").value = \"\";\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"new-todo\" onClick={this.props.toggleModal}>\n\t\t\t\t\t{this.props.modalOpen ? \"Close\" : \"New Todo Item\"}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"modal\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tthis.props.modalOpen ? { display: \"block\" } : { display: \"none\" }\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"modal-title\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\t\tclassName=\"modal-title-input\"\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-desc\">\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\tclassName=\"modal-desc-input\"\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-due-date\">\n\t\t\t\t\t\t<label htmlFor=\"duedate\">Due: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"duedate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tclassName=\"modal-due-date-input\"\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-priority\">\n\t\t\t\t\t\t<label htmlFor=\"priority\">Priority: </label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"modal-priority-input\"\n\t\t\t\t\t\t\tdefaultValue=\"Medium\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"High\">High</option>\n\t\t\t\t\t\t\t<option value=\"Medium\">\n\t\t\t\t\t\t\t\tMedium\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value=\"Low\">Low</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"submit\" onClick={this.submitHandler}>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport TodosContainer from \"./components/TodosContainer\";\nimport NewTodo from \"./components/NewTodo\";\nimport { firebaseConfig } from \"./firebaseConfig\";\n\nconst firebase = require(\"firebase\");\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst fireLibrary = db.collection(\"todos\").doc(\"library\");\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttodosLibrary: [],\n\t\t\tmodalOpen: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfireLibrary.get().then((doc) => {\n\t\t\tif (doc.exists && doc.data().todosLibrary) {\n\t\t\t\tconst lib = doc.data().todosLibrary.map(item => {\n\t\t\t\t\titem.created = item.created.toDate()\n\t\t\t\t\treturn item\n\t\t\t\t})\n\t\t\t\tthis.setState({ todosLibrary: lib });\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Firebase library does not exist\");\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateStorage = () => {\n\t\tfireLibrary.get().then((doc) => {\n\t\t\tif (doc.data().todosLibrary !== this.state.todosLibrary) {\n\t\t\t\tconsole.log('set: ', this.state.todosLibrary);\n\t\t\t\tfireLibrary.set({\n\t\t\t\t\ttodosLibrary: this.state.todosLibrary,\n\t\t\t\t});\n\t\t\t\tconsole.log(\"Setting Firebase library\");\n\t\t\t} else {\n\t\t\t\tconsole.log(\"No storage change made\");\n\t\t\t}\n\t\t});\n\t};\n\n\tnextId = () => {\n\t\tif (this.state.todosLibrary.length > 0) {\n\t\t\treturn this.state.todosLibrary[this.state.todosLibrary.length - 1].id + 1;\n\t\t} else return 1;\n\t};\n\n\ttoggleComplete = (id) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttodosLibrary: this.state.todosLibrary.map((todo) => {\n\t\t\t\t\tif (todo.id === id) {\n\t\t\t\t\t\ttodo.done = !todo.done;\n\t\t\t\t\t}\n\t\t\t\t\treturn todo;\n\t\t\t\t}),\n\t\t\t},\n\t\t\tthis.updateStorage\n\t\t);\n\t};\n\n\taddTodo = (todo) => {\n\t\tconst newLib = this.state.todosLibrary;\n\t\tnewLib.push(todo);\n\t\tthis.setState({ todosLibrary: newLib }, this.updateStorage);\n\t};\n\n\tdeleteTodo = (id) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttodosLibrary: this.state.todosLibrary.filter((todo) => {\n\t\t\t\t\treturn todo.id !== id;\n\t\t\t\t}),\n\t\t\t},\n\t\t\tthis.updateStorage\n\t\t);\n\t};\n\n\ttoggleModal = () => {\n\t\tthis.setState({ modalOpen: !this.state.modalOpen });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<NewTodo\n\t\t\t\t\tmodalOpen={this.state.modalOpen}\n\t\t\t\t\ttoggleModal={this.toggleModal}\n\t\t\t\t\tnextId={this.nextId}\n\t\t\t\t\taddTodo={this.addTodo}\n\t\t\t\t/>\n\t\t\t\t<TodosContainer\n\t\t\t\t\tlibrary={this.state.todosLibrary}\n\t\t\t\t\ttoggleComplete={this.toggleComplete}\n\t\t\t\t\tdeleteTodo={this.deleteTodo}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// Your web app's Firebase configuration\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCtYSHO9VDswgpIaq49NKMxhQtpGAe3mlg\",\n  authDomain: \"todo-list-57877.firebaseapp.com\",\n  databaseURL: \"https://todo-list-57877.firebaseio.com\",\n  projectId: \"todo-list-57877\",\n  storageBucket: \"todo-list-57877.appspot.com\",\n  messagingSenderId: \"693113891006\",\n  appId: \"1:693113891006:web:753be02bb4ea87234b16ef\",\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}